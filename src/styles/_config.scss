/*========== BUTTON CONFIGURATION  ==========*/
// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant(
  $background,
  $border,
  $hover-background: darken($background, 7.5%),
  $hover-border: darken($border, 10%),
  $active-background: darken($background, 10%),
  $active-border: darken($border, 12.5%)
) {
  color: color-yiq($background);
  background-color: $background;
  border-color: $border;

  @include hover {
    color: color-yiq($hover-background);
    background-color: $hover-background;
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($border, 0.5);
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      box-shadow: 0 0 0 $btn-focus-width rgba($border, 0.5);
    }
  }
}

@mixin button-outline-variant(
  $color,
  $color-hover: set-text-color($color),
  $active-background: $color,
  $active-border: $color
) {
  color: $blue-color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: set-text-color-btn($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
    }
  }
}

// Button sizes
@mixin button-size(
  $padding-y,
  $padding-x,
  $font-size,
  $line-height,
  $border-radius
) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

/*========== HOVER ==========*/
@mixin hover {
  &:hover {
    @content;
  }
}

@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin plain-hover-focus {
  &,
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

/*========== box-shadow ==========*/
@mixin box-shadow($shadow...) {
  box-shadow: $shadow;
}

/*========== MIXIN AND FUNCTIONS PERSONALIZED ==========*/
@mixin transition-ease {
  transition: all 0.5s ease-in-out;
}
@mixin container {
  padding: 1rem 0.5rem;
  margin: auto;
  @include media-sm() {
    padding: 1rem;
  }
  @include media-xl() {
    max-width: 113rem;
    padding-left: $mb-1-5;
    padding-right: $mb-1-5;
  }
}

@function set-text-color($color) {
  @if (lightness($color) > 40%) {
    @return #000;
  } @else {
    @return #fff;
  }
}

@function set-text-color-btn($color) {
  @if (lightness($color) > 40%) {
    @return $blue-color;
  } @else {
    @return $white-color;
  }
}

@mixin flex($justify-content, $align-items, $direction) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-direction: $direction;
}

@mixin inline-flex($justify-content, $align-items, $direction, $gap) {
  display: inline-flex;
  justify-content: $justify-content;
  align-items: $align-items;
  flex-direction: $direction;
  gap: $gap;
}

/*========== RESPONSIVE  ==========*/
@mixin media-sm {
  @media screen and (min-width: 499px) {
    @content;
  }
}
@mixin media-md {
  @media screen and (min-width: 768px) {
    @content;
  }
}
@mixin media-lg {
  @media screen and (min-width: 1024px) {
    @content;
  }
}
@mixin media-xl {
  @media screen and (min-width: 1500px) {
    @content;
  }
}
